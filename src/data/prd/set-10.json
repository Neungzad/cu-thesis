[
  {
    "Id": 21692646,
    "AcceptedAnswerId": 21693931,
    "AnswerCount": 7,
    "Body": "<p>So apparently because of the recent scams, the developer tools is exploited by people to post spam and even used to \"hack\" accounts. Facebook has blocked the developer tools, and I can't even use the console.</p>\n\n<p><img src=\"http://i.stack.imgur.com/Wiatp.png\" alt=\"Enter image description here\"></p>\n\n<p>How did they do that?? <a href=\"http://stackoverflow.com/questions/7559409/disable-developer-tools\">One Stack Overflow post claimed that it is not possible</a>, but Facebook has proven them wrong.</p>\n\n<p>Just go to Facebook and open up the developer tools, type one character into the console, and this warning pops up. No matter what you put in, it will not get executed.</p>\n\n<p>How is this possible?</p>\n\n<p>They even blocked auto-complete in the console:</p>\n\n<p><img src=\"http://i.stack.imgur.com/j0Zmx.png\" alt=\"Enter image description here\"></p>\n",
    "ClosedDate": null,
    "CommentCount": 0,
    "CommunityOwnedDate": null,
    "CreationDate": "2014-02-11T03:42:08.540Z",
    "FavoriteCount": 459,
    "LastActivityDate": "2015-11-05T00:57:04.413Z",
    "LastEditDate": "2014-03-21T21:03:43.546Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 881229,
    "OwnerUserId": 283863,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 1165,
    "Tags": "<javascript><facebook><google-chrome-devtools>",
    "Title": "How does Facebook disable the browser's integrated Developer Tools?",
    "ViewCount": 160843
  },
  {
    "Id": 22343224,
    "AcceptedAnswerId": 22345808,
    "AnswerCount": 8,
    "Body": "<p>After I upgraded to latest stable <code>node</code> and <code>npm</code>, I tried <code>npm install moment --save</code>. It saves the entry in the package.json with the <code>caret(^)</code> prefix. Previously, it was a <code>tilde(~)</code> prefix. </p>\n\n<ol>\n<li>Why are these changes made in npm? </li>\n<li>What is the difference between tilde(~) and caret(^)?</li>\n<li>What is the advantages over others?</li>\n</ol>\n",
    "ClosedDate": null,
    "CommentCount": 2,
    "CommunityOwnedDate": null,
    "CreationDate": "2014-03-12T06:02:21.986Z",
    "FavoriteCount": 234,
    "LastActivityDate": "2015-11-10T14:49:14.626Z",
    "LastEditDate": "2014-03-12T08:46:16.870Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 1448918,
    "OwnerUserId": 1154350,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 714,
    "Tags": "<javascript><node.js><npm>",
    "Title": "Difference between tilde(~) and caret(^) in package.json",
    "ViewCount": 110716
  },
  {
    "Id": 21023763,
    "AcceptedAnswerId": 21024270,
    "AnswerCount": 10,
    "Body": "<p>I am new to AngularJS. I find Angular quite interesting and planning to use angular in my big apps. So I am in the process to find out the right modules to use.</p>\n\n<p>What is the difference between <strong>ngRoute (angular-route.js)</strong> and <strong>ui-router (angular-ui-router.js)</strong> modules?</p>\n\n<p>In many articles when <em>ngRoute</em> is used, route is configured with <strong><em>$routeProvider</em></strong>. However, when used with <em>ui-router</em>, route is configured with <strong><em>$stateProvider and $urlRouterProvider</em></strong>. </p>\n\n<p>This creates a bit of confusion for me. Which module should I use for better manageability and extensibility? Your answers are greatly appreciated. </p>\n",
    "ClosedDate": null,
    "CommentCount": 1,
    "CommunityOwnedDate": null,
    "CreationDate": "2014-01-09T15:03:28.493Z",
    "FavoriteCount": 192,
    "LastActivityDate": "2016-02-08T05:16:19.673Z",
    "LastEditDate": "2015-09-29T12:36:08.706Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 1946501,
    "OwnerUserId": 1586517,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 520,
    "Tags": "<javascript><angularjs><angularjs-routing><angular-ui-router><angularjs-module>",
    "Title": "AngularJS : Difference between angular-route and angular-ui-router",
    "ViewCount": 113758
  },
  {
    "Id": 34323527,
    "AcceptedAnswerId": 34323590,
    "AnswerCount": 11,
    "Body": "<p>I have this piece of code (taken from <a href=\"http://stackoverflow.com/a/5827895/5665799\">this question</a>):</p>\n\n<pre><code>var walk = function(dir, done) {\n    var results = [];\n\n    fs.readdir(dir, function(err, list) {\n        if (err)\n            return done(err);\n\n        var pending = list.length;\n\n        if (!pending) \n            return done(null, results);\n\n        list.forEach(function(file) {\n            file = path.resolve(dir, file);\n            fs.stat(file, function(err, stat) {\n                if (stat &amp;&amp; stat.isDirectory()) {\n                    walk(file, function(err, res) {\n                        results = results.concat(res);\n\n                        if (!--pending)\n                            done(null, results);\n                    });\n                } else {\n                    results.push(file);\n\n                    if (!--pending) \n                        done(null, results);\n                }\n            });\n        });\n    });\n};\n</code></pre>\n\n<p>I'm trying to follow it, and I think I understand everything except for near the end where it says <code>!--pending</code>. In this context, what does that command do?</p>\n\n<p>Edit: I appreciate all the further comments, but the question has been answered many times. Thanks anyway!</p>\n",
    "ClosedDate": null,
    "CommentCount": 15,
    "CommunityOwnedDate": null,
    "CreationDate": "2015-12-16T22:40:46.856Z",
    "FavoriteCount": 73,
    "LastActivityDate": "2016-01-17T12:50:27.983Z",
    "LastEditDate": "2015-12-23T00:32:07.890Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 5665799,
    "OwnerUserId": 5665799,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 346,
    "Tags": "<javascript><decrement><prefix-operator><not-operator>",
    "Title": "What does \"!--\" do in JavaScript?",
    "ViewCount": 44448
  },
  {
    "Id": 31507143,
    "AcceptedAnswerId": 31507213,
    "AnswerCount": 5,
    "Body": "<p>I was baffled when a colleague showed me this line of JavaScript alerting 42.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>alert(2+ 40);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>It quickly turns out that what looks like a minus sign is actually an arcane Unicode character with clearly different semantics.</p>\n\n<p>This left me wondering why that character doesn't produce a syntax error when the expression is parsed. I'd also like to know if there are more characters behaving like this.</p>\n",
    "ClosedDate": null,
    "CommentCount": 16,
    "CommunityOwnedDate": null,
    "CreationDate": "2015-07-19T23:48:32.276Z",
    "FavoriteCount": 59,
    "LastActivityDate": "2015-07-28T11:07:59.530Z",
    "LastEditDate": "2015-07-20T14:16:56.850Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 1083663,
    "OwnerUserId": 1083663,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 325,
    "Tags": "<javascript><unicode>",
    "Title": "Why does 2+ 40 equal 42?",
    "ViewCount": 29726
  },
  {
    "Id": 21198977,
    "AcceptedAnswerId": 21199026,
    "AnswerCount": 1,
    "Body": "<p>I'm new to using npm and bower, building my first app in emberjs :).<br>\nI do have a bit of experience with rails, so I'm familiar with the idea of files for listing dependencies (such as bundler Gemfile)</p>\n\n<p>Question: when I want to add a package (and check in the dependency into git), where does it belong - into <code>package.json</code> or into <code>bower.json</code>?</p>\n\n<p>From what I gather,<br>\nrunning <code>bower install</code> will fetch the package and put it in <code>/vendor</code> directory,<br>\nrunning <code>npm install</code> it will fetch it and put it into <code>/node_modules</code> directory. </p>\n\n<p><a href=\"http://stackoverflow.com/a/16493586/1592915\">This SO answer</a> says bower is for front-end and npm is for backend stuff.<br>\n<a href=\"https://github.com/stefanpenner/ember-app-kit\">Ember-app-kit</a> seems to adhere to this distinction from the first glance... But instructions in gruntfile for <a href=\"https://github.com/stefanpenner/ember-app-kit/blob/master/Gruntfile.js#L40-L42\">enabling some functionality</a> give two explicit commands, so I'm totally confused here.</p>\n\n<p>Intuitively I would guess that  </p>\n\n<ol>\n<li><p><strong>npm install --save-dev package-name</strong> would be equivalent to adding the package-name to my package.json </p></li>\n<li><p><strong>bower install --save package-name</strong> might be the same as adding the package to my <em>bower.json</em> and running <strong>bower install</strong>?  </p></li>\n</ol>\n\n<p>If that is the case, when should I ever install packages explicitly like that without adding them to the file that manages dependencies (apart from installing command line tools globally)?</p>\n",
    "ClosedDate": null,
    "CommentCount": 2,
    "CommunityOwnedDate": null,
    "CreationDate": "2014-01-18T01:36:01.196Z",
    "FavoriteCount": 144,
    "LastActivityDate": "2015-10-10T02:21:54.366Z",
    "LastEditDate": "2014-04-23T22:56:50.700Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 616666,
    "OwnerUserId": 1592915,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 284,
    "Tags": "<javascript><gruntjs><bower><web-frontend>",
    "Title": "Difference between Grunt, NPM and Bower ( package.json vs bower.json )",
    "ViewCount": 69261
  },
  {
    "Id": 23740548,
    "AcceptedAnswerId": 23740549,
    "AnswerCount": 13,
    "Body": "<p>I have a variable in PHP, and I need its value in my JavaScript code. How can I get my variable from PHP to JavaScript?</p>\n\n<p>I have code that looks like this:</p>\n\n<pre><code>&lt;$php\n     ...\n     $val = $myService-&gt;getValue(); // makes an api and db call\n$&gt;\n</code></pre>\n\n<p>I have JavaScript code that needs <code>val</code> and looks along the lines of:</p>\n\n<pre><code>&lt;script&gt;\n    myPlugin.start($val); // tried this, didn't work\n    &lt;?php myPlugin.start($val); ?&gt; // this didn't work either\n    myPlugin.start(&lt;?=$val?&gt; // this works sometimes, but sometimes it fails\n&lt;/script&gt;\n</code></pre>\n",
    "ClosedDate": null,
    "CommentCount": 10,
    "CommunityOwnedDate": null,
    "CreationDate": "2014-05-19T14:37:56.930Z",
    "FavoriteCount": 150,
    "LastActivityDate": "2015-12-21T16:39:54.170Z",
    "LastEditDate": "2015-01-09T21:21:05.470Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 2581872,
    "OwnerUserId": 871050,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 250,
    "Tags": "<javascript><php>",
    "Title": "How to pass variables and data from PHP to JavaScript?",
    "ViewCount": 267634
  },
  {
    "Id": 23199392,
    "AcceptedAnswerId": 23206972,
    "AnswerCount": 5,
    "Body": "<p>I wanted to use the MEAN JavaScript Stack, but I noticed that there are two different stacks with either their own website and installation methods: mean.js and mean.io. So I came up asking myself this question: \"Which one do I use?\".</p>\n\n<p>So in order to answer this question I ask the community if you could explain what are the differences between these two? And if possible pros and cons? Because they look very similar to me.</p>\n",
    "ClosedDate": null,
    "CommentCount": 1,
    "CommunityOwnedDate": null,
    "CreationDate": "2014-04-21T14:26:01.863Z",
    "FavoriteCount": 118,
    "LastActivityDate": "2015-10-12T15:11:14.246Z",
    "LastEditDate": "2014-07-21T13:05:59.136Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 1193512,
    "OwnerUserId": 3555155,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 237,
    "Tags": "<javascript><node.js><angularjs><web-applications><mean-stack>",
    "Title": "Difference between MEAN.js and MEAN.io",
    "ViewCount": 72974
  },
  {
    "Id": 30492259,
    "AcceptedAnswerId": 30495228,
    "AnswerCount": 20,
    "Body": "<p>Is it possible to get a random number between 1-100 and keep the results mainly within the 40-60 range? I mean, it will go out of that range rarely, but I want it to be mainly within that range... Is it possible with JavaScript/jQuery?</p>\n\n<p>Right now I'm just using the basic <code>Math.random() * 100 + 1</code>.</p>\n",
    "ClosedDate": null,
    "CommentCount": 13,
    "CommunityOwnedDate": null,
    "CreationDate": "2015-05-27T20:12:16.803Z",
    "FavoriteCount": 81,
    "LastActivityDate": "2015-07-29T20:50:01.413Z",
    "LastEditDate": "2015-07-29T20:50:01.413Z",
    "LastEditorDisplayName": null,
    "LastEditorUserId": 87015,
    "OwnerUserId": 2444273,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 229,
    "Tags": "<javascript><algorithm><random><numbers>",
    "Title": "Get a random number focused on center",
    "ViewCount": 10998
  },
  {
    "Id": 22111619,
    "AcceptedAnswerId": 0,
    "AnswerCount": 2,
    "Body": "<p>I have an array...</p>\n\n<p>[8, 2, 5, 3, 0, 9, 1, 6, 7]</p>\n\n<p>How do I get the smallest number, not listed in the array? <code>4</code> in this case.</p>\n\n<p>The only thing I can think of is, but I would like to get rid of the while loop if I could.</p>\n\n<pre><code>var list = [8, 2, 5, 3, 9, 1, 6, 7];\nvar num = -1;\nvar done = false;\nwhile (!done) {\n  num++;\n  if(!_.contains(list, num)) {\n    done = true;\n  }\n}\n</code></pre>\n",
    "ClosedDate": null,
    "CommentCount": 5,
    "CommunityOwnedDate": null,
    "CreationDate": "2014-03-01T07:39:10.996Z",
    "FavoriteCount": 0,
    "LastActivityDate": "2014-03-01T08:10:08.463Z",
    "LastEditDate": null,
    "LastEditorDisplayName": null,
    "LastEditorUserId": 0,
    "OwnerUserId": 308079,
    "ParentId": 0,
    "PostTypeId": 1,
    "Score": 0,
    "Tags": "<javascript><functional-programming><lodash>",
    "Title": "How can I get the smallest number, not in an array, in a functional programming fashion with lo-dash?",
    "ViewCount": 189
  }
]